(function() {var implementors = {};
implementors["triseratops"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.57.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"triseratops/error/enum.Error.html\" title=\"enum triseratops::error::Error\">Error</a>","synthetic":false,"types":["triseratops::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Err&lt;VerboseError&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.slice.html\">&amp;'_ [</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.slice.html\">]</a>&gt;&gt;&gt; for <a class=\"enum\" href=\"triseratops/error/enum.Error.html\" title=\"enum triseratops::error::Error\">Error</a>","synthetic":false,"types":["triseratops::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.u32.html\">u32</a>&gt; for <a class=\"struct\" href=\"triseratops/tag/color/struct.Color.html\" title=\"struct triseratops::tag::color::Color\">Color</a>","synthetic":false,"types":["triseratops::tag::color::Color"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"triseratops/tag/color/struct.Color.html\" title=\"struct triseratops::tag::color::Color\">Color</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.u32.html\">u32</a>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()